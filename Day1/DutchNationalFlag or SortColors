//MY APPROACH
class Solution {
public:
    void sortColors(vector<int>& nums) {
        int i=0, j=nums.size()-1;
        while(i<j){ //sort 0 and 1,2
            while(i<j && nums[i]==0) i++;
            while(i<j && (nums[j]==1 || nums[j]==2)) j--;
                swap(nums[i],nums[j]);
        }
         j=nums.size()-1;
          while(i<j){ //sort 1 and 2
          while(i<j && nums[i]==1) i++;
          while(i<j && nums[j]==2) j--;
                swap(nums[i],nums[j]);
        }
    }
};
//Striver's Approach
class Solution {
public:
//brute - 2 iterations , TC : O(n), SC: O(1)
    void sortColors(vector<int>& nums) {
       int c1=0,c2=0,c0=0;
       for(int i=0;i<nums.size();i++){
        if(nums[i]==0) c0++;
        else if(nums[i]==1) c1++;
        else c2++;
       }
       //overwrite
       for(int i=0;i<c0;i++){
        nums[i]=0;
       }
        for(int i=c0;i<c0+c1;i++){
        nums[i]=1;
       }
        for(int i=c0+c1;i<nums.size();i++){
        nums[i]=2;
       }
    }
};
